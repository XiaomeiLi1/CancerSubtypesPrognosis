% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Valiation.R
\name{survAnalysis}
\alias{survAnalysis}
\title{Survival analysis(Survival curves, Log-rank test) and compute Silhouette information for cancer subtypes}
\usage{
survAnalysis(
  mainTitle = "Survival Analysis",
  time,
  status,
  group,
  distanceMatrix = NULL,
  similarity = TRUE
)
}
\arguments{
\item{mainTitle}{A character will display in the result plot.}

\item{time}{A numeric vector representing the survival time (days) of a set of samples.}

\item{status}{A numeric vector representing the survival status of a set of samples. 0=alive/censored, 1=dead.}

\item{group}{A vector represent the cluster label for a set of samples.}

\item{distanceMatrix}{A data matrix represents the similarity matrix or dissimilarity matrix between samples.\cr
If NULL, it will not compute silhouette width and draw the plot.}

\item{similarity}{A logical value. If TRUE, the distanceMatrix is a similarity distance matrix between samples. Otherwise a dissimilarity distance matrix between samples}
}
\value{
The log-rank test p-value
}
\description{
Survival analysis is a very common tool to explain and validate the cancer subtype identification result. It provides the significance testing and 
graphical display for the verification of the survival patterns between the identified cancer subtypes.
}
\examples{
data(GeneExp)
data(miRNAExp)
data(time)
data(status)
data1=FSbyCox(GeneExp,time,status,cutoff=0.05)
data2=FSbyCox(miRNAExp,time,status,cutoff=0.05)
GBM=list(GeneExp=data1,miRNAExp=data2)

### SNF result analysis
result1=ExecuteSNF(GBM, clusterNum=3, K=20, alpha=0.5, t=20)
group1=result1$group
distanceMatrix1=result1$distanceMatrix
p_value1=survAnalysis(mainTitle="GBM_SNF",time,status,group1,
                     distanceMatrix=distanceMatrix1,similarity=TRUE)
                     
### WSNF result analysis
data(Ranking)
####Retrieve there feature ranking for genes
gene_Name=rownames(data1)
index1=match(gene_Name,Ranking$mRNA_TF_miRNA.v21_SYMBOL)
gene_ranking=data.frame(gene_Name,Ranking[index1,],stringsAsFactors=FALSE)
index2=which(is.na(gene_ranking$ranking_default))
gene_ranking$ranking_default[index2]=min(gene_ranking$ranking_default,na.rm =TRUE)
####Retrieve there feature ranking for genes
miRNA_ID=rownames(data2)
index3=match(miRNA_ID,Ranking$mRNA_TF_miRNA_ID)
miRNA_ranking=data.frame(miRNA_ID,Ranking[index3,],stringsAsFactors=FALSE)
index4=which(is.na(miRNA_ranking$ranking_default))
miRNA_ranking$ranking_default[index4]=min(miRNA_ranking$ranking_default,na.rm =TRUE)
###Clustering
ranking1=list(gene_ranking$ranking_default ,miRNA_ranking$ranking_default)
result2=ExecuteWSNF(datasets=GBM, feature_ranking=ranking1, beta = 0.8, clusterNum=3, 
                    K = 20,alpha = 0.5, t = 20, plot = TRUE)
group2=result2$group
distanceMatrix2=result2$distanceMatrix
p_value2=survAnalysis(mainTitle="GBM_WSNF",time,status,group2,
                     distanceMatrix=distanceMatrix2,similarity=TRUE)

}
\author{
Xu,Taosheng \email{taosheng.x@gmail.com},Thuc Le \email{Thuc.Le@unisa.edu.au}
}
